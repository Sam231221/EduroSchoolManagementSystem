# Generated by Django 4.0.3 on 2023-05-28 10:11

import ckeditor_uploader.fields
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('MUtilities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='Name of the Company:')),
                ('thumbnail', models.ImageField(help_text='Provide the image of your Company', null=True, upload_to='')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Business Email')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('bookingprice', models.IntegerField(null=True)),
                ('followers', models.IntegerField(null=True)),
                ('likes', models.IntegerField(null=True)),
                ('office_number', models.CharField(max_length=10, null=True)),
                ('opening_time', models.TimeField(help_text='At what time your company starts?. Expected in AM', null=True)),
                ('closing_time', models.TimeField(help_text='At what time your company ends?. Expected in PM', null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('total_views', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MCompany.category')),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='GymPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, max_length=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Visitior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipaddress', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('socialtype', models.CharField(choices=[('Google', 'Google'), ('Facebook', 'Facebook'), ('Instagram', 'Instagram'), ('Twitter', 'Twitter')], max_length=50, null=True)),
                ('url', models.URLField(help_text='Provide the link of your any social link', null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MCompany.company')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('thumbnail', models.ImageField(null=True, upload_to='')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('working_hour', models.IntegerField(help_text='Mention in hour.', null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, max_length=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('sits', models.PositiveIntegerField(help_text='No of people enrolling for this service.', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('bookmarks', models.ManyToManyField(blank=True, default=None, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MCompany.company')),
                ('ordered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userserviceorders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.TextField(editable=False, null=True)),
                ('review_rating', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=150)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MCompany.company')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='ImageAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.URLField(null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MCompany.company', verbose_name='Images')),
            ],
        ),
        migrations.CreateModel(
            name='GymMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coming_time', models.TimeField(null=True)),
                ('joining_time', models.DateTimeField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('customer', models.OneToOneField(help_text='Owner of Company:', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('paying_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MCompany.gymplan')),
                ('provider', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='MCompany.company')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('thumbnail', models.ImageField(null=True, upload_to='')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, max_length=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('starting_time', models.DateTimeField(help_text='At what time the event starts?.', null=True)),
                ('ending_time', models.DateTimeField(help_text='At what time the event ends?.', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('going', models.PositiveIntegerField(blank=True, null=True)),
                ('total_sits', models.PositiveIntegerField(help_text='Total no of people that can participate in this event.', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('sits', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('bookmarks', models.ManyToManyField(blank=True, default=None, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MCompany.company')),
                ('ordered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usereventorders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MCompany.location'),
        ),
        migrations.AddField(
            model_name='company',
            name='membership',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MUtilities.membership'),
        ),
        migrations.AddField(
            model_name='company',
            name='user',
            field=models.OneToOneField(help_text='Owner of Company:', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='views',
            field=models.ManyToManyField(blank=True, to='MCompany.visitior'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starting_time', models.TimeField(null=True)),
                ('ending_time', models.TimeField(null=True)),
                ('price', models.DecimalField(decimal_places=2, default=100, max_digits=6, max_length=4)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('availability', models.CharField(blank=True, choices=[('Booked', 'Booked'), ('Book Now', 'Book Now')], default='Book Now', max_length=100)),
                ('customer', models.ForeignKey(blank=True, help_text='Owner of Company:', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MCompany.company')),
            ],
            options={
                'ordering': ('starting_time',),
            },
        ),
    ]
